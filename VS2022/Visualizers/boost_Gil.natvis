<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

<UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1"
          MenuName="Add to Image Watch"/>

<Type Name="boost::gil::image&lt;*&gt;">
    <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
</Type>

<Type Name="boost::gil::devicen_layout_t&lt;2&gt;">
    <DisplayString>RG</DisplayString>
</Type>

<Type Name="boost::gil::layout&lt;boost::mpl::vector3&lt;boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t&gt;,boost::mpl::range_c&lt;int,0,3&gt; &gt;">
    <AlternativeType Name="boost::gil::layout&lt;boost::mp11::mp_list&lt;boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t&gt;,*&gt;"/>
    <DisplayString>RGB</DisplayString>
</Type>

<Type Name="boost::gil::layout&lt;boost::mpl::vector3&lt;boost::gil::blue_t,boost::gil::green_t,boost::gil::red_t&gt;,boost::mpl::range_c&lt;int,0,3&gt; &gt;">
    <AlternativeType Name="boost::gil::layout&lt;boost::mp11::mp_list&lt;boost::gil::blue_t,boost::gil::green_t,boost::gil::red_t&gt;,*&gt;"/>
    <DisplayString>BGR</DisplayString>
</Type>

<Type Name="boost::gil::layout&lt;boost::mpl::vector4&lt;boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t&gt;,boost::mpl::range_c&lt;int,0,4&gt; &gt;">
    <AlternativeType Name="boost::gil::layout&lt;boost::mp11::mp_list&lt;boost::gil::red_t,boost::gil::green_t,boost::gil::blue_t,boost::gil::alpha_t&gt;,*&gt;"/>
    <DisplayString>RGBA</DisplayString>
</Type>

<Type Name="boost::gil::layout&lt;boost::mpl::vector4&lt;boost::gil::blue_t,boost::gil::green_t,boost::gil::red_t,boost::gil::alpha_t&gt;,boost::mpl::range_c&lt;int,0,4&gt; &gt;">
    <AlternativeType Name="boost::gil::layout&lt;boost::mp11::mp_list&lt;boost::gil::blue_t,boost::gil::green_t,boost::gil::red_t,boost::gil::alpha_t&gt;,*&gt;"/>
    <DisplayString>BGRA</DisplayString>
</Type>

<Type Name="boost::gil::layout&lt;boost::mpl::vector1&lt;boost::gil::gray_color_t&gt;,boost::mpl::range_c&lt;int,0,1&gt; &gt;">
    <AlternativeType Name="boost::gil::layout&lt;boost::mp11::mp_list&lt;boost::gil::gray_color_t&gt;,*&gt;"/>
    <DisplayString>1</DisplayString>
</Type>

<Type Name="boost::gil::image&lt;boost::gil::pixel&lt;*,*&gt;,*&gt;">
    <Expand>
        <Synthetic Name="[type]" Condition='strcmp("unsigned char", "$T1") == 0'>
            <DisplayString>UINT8</DisplayString>
        </Synthetic>
        <Synthetic Name="[type]" Condition='strcmp("signed char", "$T1") == 0'>
            <DisplayString>INT8</DisplayString>
        </Synthetic>
        <Synthetic Name="[type]" Condition='strcmp("unsigned short", "$T1") == 0'>
            <DisplayString>UINT16</DisplayString>
        </Synthetic>
        <Synthetic Name="[type]" Condition='strcmp("signed short", "$T1") == 0'>
            <DisplayString>INT16</DisplayString>
        </Synthetic>
        <Synthetic Name="[type]" Condition='strcmp("unsigned int", "$T1") == 0'>
            <DisplayString>UINT32</DisplayString>
        </Synthetic>
        <Synthetic Name="[type]" Condition='strcmp("signed int", "$T1") == 0'>
            <DisplayString>INT32</DisplayString>
        </Synthetic>
        <Synthetic Name="[type]" Condition='strcmp("float", "$T1") == 0'>
            <DisplayString>FLOAT32</DisplayString>
        </Synthetic>
        <Synthetic Name="[channels]">
            <DisplayString>{($T2*)1,na}</DisplayString>
        </Synthetic>

        <Item Name="[width]">_view._dimensions.x</Item>
        <Item Name="[height]">_view._dimensions.y</Item>
        <Item Name="[data]">_memory</Item>
        <Item Name="[stride]">_view._pixels._p._step_fn._step</Item>
    </Expand>
</Type>

<Type Name="boost::gil::any_image&lt;*&gt;">
    <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  6">{*($T7  *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  6">*($T7  *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  6">{*($T7  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  7">{*($T8  *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  6">*($T7  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  7">*($T8  *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  6">{*($T7  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  7">{*($T8  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  8">{*($T9  *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  6">*($T7  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  7">*($T8  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  8">*($T9  *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  6">{*($T7  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  7">{*($T8  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  8">{*($T9  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  9">{*($T10 *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  6">*($T7  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  7">*($T8  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  8">*($T9  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  9">*($T10 *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  6">{*($T7  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  7">{*($T8  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  8">{*($T9  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  9">{*($T10 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 10">{*($T11 *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  6">*($T7  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  7">*($T8  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  8">*($T9  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  9">*($T10 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 10">*($T11 *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  6">{*($T7  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  7">{*($T8  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  8">{*($T9  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  9">{*($T10 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 10">{*($T11 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 11">{*($T12 *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  6">*($T7  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  7">*($T8  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  8">*($T9  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  9">*($T10 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 10">*($T11 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 11">*($T12 *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  6">{*($T7  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  7">{*($T8  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  8">{*($T9  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  9">{*($T10 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 10">{*($T11 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 11">{*($T12 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 12">{*($T13 *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  6">*($T7  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  7">*($T8  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  8">*($T9  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  9">*($T10 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 10">*($T11 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 11">*($T12 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 12">*($T13 *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  6">{*($T7  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  7">{*($T8  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  8">{*($T9  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  9">{*($T10 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 10">{*($T11 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 11">{*($T12 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 12">{*($T13 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 13">{*($T14 *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  6">*($T7  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  7">*($T8  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  8">*($T9  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  9">*($T10 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 10">*($T11 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 11">*($T12 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 12">*($T13 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 13">*($T14 *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

<Type Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*,*,*,*,*&gt; &gt;">
    <AlternativeType Name="boost::gil::variant&lt;boost::mpl::vector&lt;*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na&gt; &gt;"/>
    <DisplayString Condition="_index ==  0">{*($T1  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  1">{*($T2  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  2">{*($T3  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  3">{*($T4  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  4">{*($T5  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  5">{*($T6  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  6">{*($T7  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  7">{*($T8  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  8">{*($T9  *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index ==  9">{*($T10 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 10">{*($T11 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 11">{*($T12 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 12">{*($T13 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 13">{*($T14 *)&amp;(_bits)}</DisplayString>
    <DisplayString Condition="_index == 14">{*($T15 *)&amp;(_bits)}</DisplayString>
    <Expand>
        <ExpandedItem Condition="_index ==  0">*($T1  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  1">*($T2  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  2">*($T3  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  3">*($T4  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  4">*($T5  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  5">*($T6  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  6">*($T7  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  7">*($T8  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  8">*($T9  *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index ==  9">*($T10 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 10">*($T11 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 11">*($T12 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 12">*($T13 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 13">*($T14 *)&amp;(_bits)</ExpandedItem>
        <ExpandedItem Condition="_index == 14">*($T15 *)&amp;(_bits)</ExpandedItem>
    </Expand>
</Type>

</AutoVisualizer>
